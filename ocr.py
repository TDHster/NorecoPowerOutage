# recognize_text_from_images.py

from pathlib import Path
from PIL import Image, ImageEnhance
import easyocr

def enhance_image_steps(img_path: Path, out_dir: Path = Path("processed")) -> Image:
    out_dir.mkdir(exist_ok=True, parents=True)

    stem = img_path.stem  # –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è

    # 1. –û—Ç–∫—Ä—ã—Ç–∏–µ –∏ –ø–µ—Ä–µ–≤–æ–¥ –≤ –æ—Ç—Ç–µ–Ω–∫–∏ —Å–µ—Ä–æ–≥–æ
    image = Image.open(img_path).convert("L")
    gray_path = out_dir / f"{stem}_1_gray.png"
    image.save(gray_path)
    print(f"üñ§ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ (–≥—Ä–∞–¥–∞—Ü–∏–∏ —Å–µ—Ä–æ–≥–æ): {gray_path.name}")

    # 2. –ü–æ–≤—ã—à–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞
    image = ImageEnhance.Contrast(image).enhance(2.0)
    contrast_path = out_dir / f"{stem}_2_contrast.png"
    image.save(contrast_path)
    print(f"‚ö´ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ (–∫–æ–Ω—Ç—Ä–∞—Å—Ç): {contrast_path.name}")

    # # 3. –ë–∏–Ω–∞—Ä–∏–∑–∞—Ü–∏—è
    # threshold = 160
    # image = image.point(lambda x: 255 if x > threshold else 0)
    # binary_path = out_dir / f"{stem}_3_binary.png"
    # image.save(binary_path)
    # print(f"‚¨õ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ (–±–∏–Ω–∞—Ä–∏–∑–∞—Ü–∏—è): {binary_path.name}")

    return image  # —É–∂–µ –≥–æ—Ç–æ–≤–æ–µ –¥–ª—è OCR


def recognize_text_in_folder(folder: Path, lang: str = "en"):
    """
    –†–∞—Å–ø–æ–∑–Ω–∞—ë—Ç —Ç–µ–∫—Å—Ç —Å–æ –≤—Å–µ—Ö .jpg —Ñ–∞–π–ª–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ
    –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ .txt —Ä—è–¥–æ–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏.
    """
    reader = easyocr.Reader([lang], gpu=False)
    jpg_files = list(folder.glob("*.jpg"))

    if not jpg_files:
        print("üõë –ù–µ—Ç JPG-—Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ:", folder)
        return

    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(jpg_files)} .jpg-—Ñ–∞–π–ª–æ–≤ –≤ {folder}")

    for i, img_path in enumerate(jpg_files, 1):
        print(f"\n[{i}/{len(jpg_files)}] üñºÔ∏è –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è: {img_path.name}")

        try:   
            image = Image.open(img_path).convert("L")  # –ü–µ—Ä–µ–≤–æ–¥ –≤ –≥—Ä–∞–¥–∞—Ü–∏–∏ —Å–µ—Ä–æ–≥–æ

            enhancer = ImageEnhance.Contrast(image)
            image = enhancer.enhance(2.0)

        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å {img_path.name}: {e}")
            continue
        
        # –†–∞—Å–ø–æ–∑–Ω–∞—ë–º —Ç–µ–∫—Å—Ç
        results = reader.readtext(str(img_path))

        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        text_lines = [res[1] for res in results]
        full_text = "\n".join(text_lines)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ .txt
        txt_path = img_path.with_suffix(".txt")
        txt_path.write_text(full_text, encoding="utf-8")

        print(f"‚úÖ –¢–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤: {txt_path.name}")

    print("\nüéâ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    recognize_text_in_folder(Path("images"))  # –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
